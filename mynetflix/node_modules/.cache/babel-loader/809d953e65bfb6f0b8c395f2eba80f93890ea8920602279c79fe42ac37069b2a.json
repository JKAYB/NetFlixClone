{"ast":null,"code":"var _jsxFileName = \"/Users/jk/Desktop/NetflixClone/mynetflix/src/Components/Banner.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport \"./Banner.css\";\nimport axios from '../axios';\nimport { imageUrl } from './constants/constants';\nimport Youtube from 'react-youtube';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Banner(props) {\n  _s();\n  const [movie, setMovie] = useState();\n  useEffect(() => {\n    axios.get(props.url).then(response => {\n      setMovie(response.data.results[Math.floor(Math.random() * response.data.results.length)]);\n    });\n  }, [props.url]);\n  const onPlayerReady = event => {\n    // access to player in all event handlers via event.target\n    event.target.pauseVideo();\n  };\n  const opts = {\n    height: '390',\n    width: '100%',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 1,\n      controls: 0,\n      loop: 1,\n      modestbranding: 1\n    }\n  };\n  const handleMovie = id => {\n    axios.get(`/movie/${id}/videos?api_key=${API_KEY}&language=en-US`).then(response => {\n      if (response.data.results.length !== 0) {\n        setUrlId(response.data.results[Math.floor(Math.random() * response.data.results.length)]);\n      } else {\n        console.log(\"Array not available\");\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundImage: `url(${movie ? imageUrl + movie.backdrop_path : \"\"})`\n    },\n    className: \"banner\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"movie\",\n        children: movie ? movie.original_title ? movie.original_title : movie.name : \"nil\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"description\",\n        children: movie ? movie.overview : \"nil\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleMovie(obj.id),\n          className: \"button-play\",\n          children: \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-info\",\n          children: \"More Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fade\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Banner, \"zLQzb3KCyZr1Tue8ze3ysZzgn6s=\");\n_c = Banner;\nexport default Banner;\nvar _c;\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"names":["React","useState","useEffect","axios","imageUrl","Youtube","Banner","props","movie","setMovie","get","url","then","response","data","results","Math","floor","random","length","onPlayerReady","event","target","pauseVideo","opts","height","width","playerVars","autoplay","controls","loop","modestbranding","handleMovie","id","API_KEY","setUrlId","console","log","backgroundImage","backdrop_path","original_title","name","overview","obj"],"sources":["/Users/jk/Desktop/NetflixClone/mynetflix/src/Components/Banner.js"],"sourcesContent":["\nimport React, { useState } from 'react'\nimport { useEffect } from 'react'\nimport \"./Banner.css\"\nimport axios from '../axios'\nimport {imageUrl} from './constants/constants'\nimport Youtube from 'react-youtube'\n\nfunction Banner (props) {\n  const [movie, setMovie] = useState()\n\n  useEffect(() => {\n    axios.get(props.url).then((response)=>{  \n      setMovie(response.data.results[Math.floor(Math.random() * response.data.results.length)])\n    })\n  }, [props.url])\n  \n  const onPlayerReady: YouTubeProps['onReady'] = (event) => {\n    // access to player in all event handlers via event.target\n    event.target.pauseVideo();\n  }\n  const opts = {\n    height: '390',\n    width: '100%',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 1,\n      controls : 0, \n      loop : 1,\n      modestbranding: 1,\n     \n    },\n  \n  }\n  \n  const handleMovie =(id)=>{\n    axios.get(`/movie/${id}/videos?api_key=${API_KEY}&language=en-US`).then(response=>{\n      if(response.data.results.length!==0){\n        setUrlId(response.data.results[Math.floor(Math.random() * response.data.results.length)])\n      } \n        else{\n        console.log(\"Array not available\")\n      }\n    })\n  }\n\n  return (\n    <div \n    style={{backgroundImage: `url(${movie? imageUrl+movie.backdrop_path : \"\"})`}}\n    className=\"banner\">\n        <div className=\"content\">\n            <h1 className=\"movie\">{movie ? movie.original_title?movie.original_title : movie.name:\"nil\"}</h1>\n            <h1 className='description'>{movie ? movie.overview : \"nil\"}</h1>\n            <div className=\"banner-buttons\">\n                <button onClick={()=>handleMovie(obj.id)} className=\"button-play\">Play</button>\n                <button className=\"button-info\">More Info</button>\n            </div>\n        </div>\n        <div className=\"fade\"></div>\n    </div>\n  )\n}\n\nexport default Banner\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}