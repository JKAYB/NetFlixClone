{"ast":null,"code":"import _slicedToArray from\"/Users/jk/Desktop/NetflixClone/mynetflix/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import\"./row.css\";import axios from'../constants/axios';import{imageUrl,API_KEY}from'../constants/constants';import Youtube from'react-youtube';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Row(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movies=_useState2[0],setMovies=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),urlId=_useState4[0],setUrlId=_useState4[1];useEffect(function(){axios.get(props.url).then(function(response){setMovies(response.data.results);}).catch(function(err){alert('Network Error');});},[props.url]);var opts={height:'700',width:'100%',playerVars:{// https://developers.google.com/youtube/player_parameters\nautoplay:1,rel:0,controls:0}};var handleMovie=function handleMovie(id){axios.get(\"/movie/\".concat(id,\"/videos?api_key=\").concat(API_KEY,\"&language=en-US\")).then(function(response){if(response.data.results.length!==0){setUrlId(response.data.results[0]);console.log(response);}else{console.log(\"Array not available\");}});};return/*#__PURE__*/_jsxs(\"div\",{className:\"rows\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"title\",children:props.title}),/*#__PURE__*/_jsx(\"div\",{className:\"posters\",children:movies.map(function(obj){return/*#__PURE__*/_jsx(\"img\",{onClick:function onClick(){return handleMovie(obj.id);},className:props.isSmall?'smallPoster':'poster',src:\"\".concat(imageUrl+obj.poster_path),alt:\"poster\"},crypto.randomUUID());})}),urlId&&/*#__PURE__*/_jsx(Youtube,{videoId:urlId.key,opts:opts})]});}export default Row;","map":{"version":3,"names":["React","useEffect","useState","axios","imageUrl","API_KEY","Youtube","Row","props","movies","setMovies","urlId","setUrlId","get","url","then","response","data","results","catch","err","alert","opts","height","width","playerVars","autoplay","rel","controls","handleMovie","id","length","console","log","title","map","obj","isSmall","poster_path","crypto","randomUUID","key"],"sources":["/Users/jk/Desktop/NetflixClone/mynetflix/src/Components/HomePage/Row.js"],"sourcesContent":["import React,{useEffect,useState} from 'react'\nimport \"./row.css\"\nimport axios from '../constants/axios'\nimport {imageUrl,API_KEY} from '../constants/constants'\nimport Youtube from 'react-youtube'\nfunction Row(props) {\n  const[movies,setMovies]= useState([])\n  const[urlId,setUrlId]= useState('')\n  useEffect(() => {\n    axios.get(props.url).then((response)=>{\n      setMovies(response.data.results)\n  }).catch(err=>{\n     alert('Network Error')\n  })\n  }, [props.url])\n                \n  const opts = {\n    height: '700',\n    width: '100%',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 1,\n      rel: 0,\n      controls : 0,\n    },\n  }\n  const handleMovie =(id)=>{\n    axios.get(`/movie/${id}/videos?api_key=${API_KEY}&language=en-US`).then(response=>{\n      if(response.data.results.length!==0){\n        setUrlId(response.data.results[0])\n        console.log(response)\n\n      } \n        else{\n        console.log(\"Array not available\")\n      }\n    })\n  }\n  return (\n    <div className='rows'>\n        <h2 className='title'>{props.title}</h2>\n        <div  className='posters'>\n          {  movies.map((obj)=> \n              <img onClick={()=>handleMovie(obj.id)} \n              className= {props.isSmall ?'smallPoster' : 'poster'} \n              src={`${imageUrl+obj.poster_path}`}key={crypto.randomUUID()} alt=\"poster\" />             \n)}             \n      </div>\n        {urlId && <Youtube videoId= {urlId.key} opts={opts} />}\n      </div>\n  )\n}\n\nexport default Row\n"],"mappings":"8HAAA,MAAOA,MAAK,EAAEC,SAAS,CAACC,QAAQ,KAAO,OAAO,CAC9C,MAAO,WAAW,CAClB,MAAOC,MAAK,KAAM,oBAAoB,CACtC,OAAQC,QAAQ,CAACC,OAAO,KAAO,wBAAwB,CACvD,MAAOC,QAAO,KAAM,eAAe,yFACnC,QAASC,IAAG,CAACC,KAAK,CAAE,CAClB,cAAyBN,QAAQ,CAAC,EAAE,CAAC,wCAA/BO,MAAM,eAACC,SAAS,eACtB,eAAuBR,QAAQ,CAAC,EAAE,CAAC,yCAA7BS,KAAK,eAACC,QAAQ,eACpBX,SAAS,CAAC,UAAM,CACdE,KAAK,CAACU,GAAG,CAACL,KAAK,CAACM,GAAG,CAAC,CAACC,IAAI,CAAC,SAACC,QAAQ,CAAG,CACpCN,SAAS,CAACM,QAAQ,CAACC,IAAI,CAACC,OAAO,CAAC,CACpC,CAAC,CAAC,CAACC,KAAK,CAAC,SAAAC,GAAG,CAAE,CACXC,KAAK,CAAC,eAAe,CAAC,CACzB,CAAC,CAAC,CACF,CAAC,CAAE,CAACb,KAAK,CAACM,GAAG,CAAC,CAAC,CAEf,GAAMQ,KAAI,CAAG,CACXC,MAAM,CAAE,KAAK,CACbC,KAAK,CAAE,MAAM,CACbC,UAAU,CAAE,CACV;AACAC,QAAQ,CAAE,CAAC,CACXC,GAAG,CAAE,CAAC,CACNC,QAAQ,CAAG,CACb,CACF,CAAC,CACD,GAAMC,YAAW,CAAE,QAAbA,YAAW,CAAGC,EAAE,CAAG,CACvB3B,KAAK,CAACU,GAAG,kBAAWiB,EAAE,4BAAmBzB,OAAO,oBAAkB,CAACU,IAAI,CAAC,SAAAC,QAAQ,CAAE,CAChF,GAAGA,QAAQ,CAACC,IAAI,CAACC,OAAO,CAACa,MAAM,GAAG,CAAC,CAAC,CAClCnB,QAAQ,CAACI,QAAQ,CAACC,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC,CAClCc,OAAO,CAACC,GAAG,CAACjB,QAAQ,CAAC,CAEvB,CAAC,IACK,CACJgB,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC,CACpC,CACF,CAAC,CAAC,CACJ,CAAC,CACD,mBACE,aAAK,SAAS,CAAC,MAAM,wBACjB,WAAI,SAAS,CAAC,OAAO,UAAEzB,KAAK,CAAC0B,KAAK,EAAM,cACxC,YAAM,SAAS,CAAC,SAAS,UACpBzB,MAAM,CAAC0B,GAAG,CAAC,SAACC,GAAG,qBACd,YAAK,OAAO,CAAE,yBAAIP,YAAW,CAACO,GAAG,CAACN,EAAE,CAAC,EAAC,CACtC,SAAS,CAAGtB,KAAK,CAAC6B,OAAO,CAAE,aAAa,CAAG,QAAS,CACpD,GAAG,WAAKjC,QAAQ,CAACgC,GAAG,CAACE,WAAW,CAAG,CAA0B,GAAG,CAAC,QAAQ,EAAjCC,MAAM,CAACC,UAAU,EAAE,CAAiB,GACzF,EACW,CACH7B,KAAK,eAAI,KAAC,OAAO,EAAC,OAAO,CAAGA,KAAK,CAAC8B,GAAI,CAAC,IAAI,CAAEnB,IAAK,EAAG,GAClD,CAEZ,CAEA,cAAef,IAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}